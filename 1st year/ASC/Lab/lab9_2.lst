     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, scanf, printf
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  %include "factorial.asm"
     1                              <1> %ifndef _FACTORIAL_ASM_
     2                              <1> %define _FACTORIAL_ASM_
     3                              <1> 
     4                              <1> factorial:
     5 00000000 B801000000          <1>     mov eax, 1
     6 00000005 8B5C2404            <1>     mov ebx, [esp + 4]
     7 00000009 8B0B                <1>     mov ecx, [ebx]
     8                              <1> 
     9                              <1>     l:
    10 0000000B F7E1                <1>     mul ecx
    11 0000000D E2FC                <1>     loop l
    12                              <1> 
    13 0000000F C3                  <1>     ret
    14                              <1> 
    15                              <1> %endif
    11                                  segment data use32 class=data
    12 00000010 257500                      f db "%u", 0
    13 00000013 <res 00000004>              n resd 1
    14 00000017 663D257500                  f2 db "f=%u", 0
    15                                      
    16                                  segment code use32 class=code
    17                                  start:
    18 00000000 68[13000000]                push n
    19 00000005 68[10000000]                push f
    20 0000000A FF15[00000000]              call [scanf]
    21 00000010 83C408                      add esp, 4 * 2
    22                                  
    23 00000013 E8(00000000)                call factorial
    24 00000018 83C404                      add esp, 4
    25                                  
    26 0000001B 50                          push eax
    27 0000001C 68[17000000]                push f2
    28 00000021 FF15[00000000]              call [printf]
    29 00000027 83C408                      add esp, 4 * 2
    30                                      
    31 0000002A 6A00                        push dword 0
    32 0000002C FF15[00000000]              call [exit]
